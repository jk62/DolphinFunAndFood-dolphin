// app/layout.tsx
import type { Metadata } from "next";
import "./globals.css";
import NavBar from "@/components/NavBar";

export const metadata: Metadata = {
  metadataBase: new URL("https://www.dolphinfunandfood.com"),
  title: {
    default: "Dolphin Fun & Food",
    template: "%s | Dolphin Fun & Food",
  },
  description:
    "Luxurious Restaurant • Banquets • Water Park — an 8-acre destination on the highway.",
  openGraph: {
    type: "website",
    url: "https://www.dolphinfunandfood.com",
    title: "Dolphin Fun & Food",
    description:
      "Luxurious Restaurant • Banquets • Water Park — an 8-acre destination.",
    images: [
      {
        url: "/images/dolphin-banner.jpg", // lives in /public/images
        width: 1200,
        height: 630,
        alt: "Dolphin Fun & Food",
      },
    ],
  },
  twitter: {
    card: "summary_large_image",
    title: "Dolphin Fun & Food",
    description:
      "Luxurious Restaurant • Banquets • Water Park — an 8-acre destination.",
    images: ["/images/dolphin-banner.jpg"],
  },
  icons: {
    icon: "/favicon.ico",
  },
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body>
        <NavBar /> {/* <- add this line */}
        {children}
      </body>
    </html>
  );
}

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! //
// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }
